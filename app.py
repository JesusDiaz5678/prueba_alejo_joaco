# -*- coding: utf-8 -*-
"""Despliegue.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w5AfojT6_u2qFUivu7RReDmQJQL-xldY
"""

# Despliegue

#- Cargamos el modelo
#- Cargamos los datos futuros (Churn_Modelling-future.csv)
#- Preparar los datos futuros
#- Aplicamos el modelo para la predicción

#Importamos librerías básicas
import pandas as pd # manipulacion dataframes
import numpy as np  # matrices y vectores
import matplotlib.pyplot as plt #gráfica

#Cargamos el modelo
import pickle
filename = 'modelo_decision_tree_optimizado.pkl'
modelTree,labelencoder,variables = pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros (SE COMENTAN LAS DOS LINEAS DESPUES DE ESTE COMENTARIO UNA VEZ CULMINADO TODO EL PROCESO)
data = pd.read_csv("Registro_FUTURE_vendedores_limpio.csv")
data.head()

#Se crea interfaz gráfica con streamlit para capturar los datos
# NOOOOOOO EJECUTARRRR
#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.title('Predicción de activo o inactivo')

actividad = st.selectbox("Actividad_Oferta", [
    'AGUA DE COCO', 'ART. DE FERRETERIA',
    'ARTESANIAS Y ARTICULOS VARIOS', 'ARTICULOS RELIGIOSOS',
    'ARTICULOS VARIOS', 'CD - DVD - DISCOS', 'CELULARES Y SIMILARES',
    'COMIDA PREPARADA Y BEBIDAS', 'COMIDAS PREPARADAS',
    'COMIDAS RAPIDAS (AREPAS)', 'COMIDAS RAPIDAS',
    'DESCAMADOR DE PESCADO', 'FLOTADORES Y VARIOS', 'FRITOS Y OTROS',
    'JUEGOS DE AZAR', 'MERCANCIAS VARIAS',
    'PINTURAS DE ACRILICO SOBRE LIENZO', 'PINTURAS Y ACUARELAS',
    'PRODUCTOS DE CHAZAS', 'PRODUCTOS NATURALES',
    'REPUESTOS ELÉCTRICOS', 'ROPA Y VARIEDADES',
    'SERVICIOS TURISTICOS', 'SOMBREROS Y GAFAS',
    'TALLER ART. ELECTRICOS', 'TALLER CELULARES',
    'TALLER DE CARPINTERIA', 'TALLER DE RELOJERIA',
    'TALLER DE ZAPATERIA', 'TALLER OPTICO',
    'TINTOS/BEBIDAS CALIENTES', 'TRAMITE DE DOCUMENTOS',
    'VENTA DE CHUZOS', 'VENTA DE COCO Y AGUA DE COCO',
    'VENTA DE COCOS Y REFRESCOS', 'VENTA DE COMIDAS RAPIDAS',
    'VENTA DE CUADROS', 'AGUA/REFRESCOS', 'ARTESANIAS', 'CALZADO',
    'CARBON', 'CARNES', 'CARPEROS', 'CERRAJERIA', 'COCTELES', 'COMIDAS',
    'ELECTRODOMESTICOS', 'ELECTROMENORES', 'FLORES', 'FOTOGRAFIAS/PINTURAS',
    'FRITOS', 'GAFAS/LENTES', 'HORTALIZAS/FRUTAS', 'JUGOS', 'JUGOS/RASPAO',
    'JUGUETES', 'LIBROS', 'LUSTRABOTAS', 'MAROQUINERIA', 'MASAJE/PEINADO',
    'MINUTOS', 'MODISTERIA', 'PALETAS/HELADOS', 'PAN/REPOSTERIA',
    'PARRILLA/STAND', 'PESCADO', 'PLATA/JOYAS/RELOJ', 'PRENSA/REVISTAS',
    'RASPAO', 'RELOJERIA', 'REVISTAS/LIBROS/PERIODICOS', 'SERVICIOS',
    'TELECOMUNICACIONES', 'VELAS'
])

localidad = st.selectbox("Localidad", [
    'LOCALIDAD 1', 'LOCALIDAD 2', 'LOCALIDAD 3'
])

barrios = st.selectbox("Barrios", [
    'ALAMEDA LA VICTORIA',
    'CRISANTO LUQUE',
    'CUATRO VIENTOS',
    'EL ESPINAL',
    'EL LAGUITO',
    'EL PRADO',
    'LAS GAVIOTAS',
    'LOS EJECUTIVOS',
    'MARTINEZ MARTELO',
    'NUEVO PARAISO',
    'OLAYA HERRERA',
    'PIE DEL CERRO',
    'SAN FERNANDO',
    'BAZURTO',
    'BOCAGRANDE',
    'BOSQUE',
    'CASTILLOGRANDE',
    'CENTRO',
    'CRESPO',
    'GETSEMANI',
    'MAMONAL',
    'MANGA',
    'TORICES'
])

tipo_venta = st.selectbox("Tipo_de_Venta", [
    'AMBULANTE', 'ESTACIONARIO', 'SEMI-ESTACIONARIO'
])

tipo_oferta = st.selectbox("Tipo_de_Oferta", [
    'BIENES', 'SERVICIOS'
])

genero = st.selectbox("Genero", [
    'MASCULINO', 'FEMENINO'
])

etnia = st.selectbox("Etnia", [
    'AFROCOLOMBIANO', 'BLANCO', 'INDIGENA', 'MESTIZO',
    'PALENQUERO', 'RAIZALES', 'NINGUNA'
])



datos = [[actividad, localidad, barrios, tipo_venta, tipo_oferta, genero, etnia]]
data = pd.DataFrame(datos, columns=[
    'Actividad_Oferta', 'Localidad', 'Barrios', 'Tipo_de_Venta',
    'Tipo_de_Oferta', 'Genero', 'Etnia'
]) #Dataframe con los mismos nombres de variables

#Se realiza la preparación debe ser igual al aprendizaje
data_preparada=data.copy()
data_preparada = pd.get_dummies(data_preparada, columns=['Tipo_de_Oferta', 'Genero'], drop_first=True, dtype=int)
data_preparada = pd.get_dummies(data_preparada, columns=['Actividad_Oferta', 'Localidad', 'Barrios', 'Tipo_de_Venta', 'Etnia'], drop_first=False, dtype=int)
# Alinear columnas con las del modelo entrenado
data_preparada = data_preparada.reindex(columns=variables, fill_value=0)
data_preparada.head()

"""**PREDICCIONES**"""

#Hacemos la predicción con el Tree
Y_fut = modelTree.predict(data_preparada)
print(Y_fut)

# labelencoder (predicciones ya están decodificadas, NO necesitas usar inverse_transform.)
data['Tree'] = Y_fut
data['Tree'] = data['Tree'].map({0: 'Inactivo', 1: 'Activo'})
data.head()

data